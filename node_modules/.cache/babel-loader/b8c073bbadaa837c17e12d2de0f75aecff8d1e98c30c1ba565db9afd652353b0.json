{"ast":null,"code":"var _jsxFileName = \"/home/mousab/Netplix/src/components/Series/series.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport MovieShowFavDetails from \"../ModalMovie/modalFavMovie\";\nimport { useState, useEffect } from \"react\";\nimport MovieFavCard from \"../Movie/movieFav\";\nimport { Row, CardGroup } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport ColorSchemesExample from \"../NavBar/navbar\";\nimport \"./series.scss\";\nimport MovieShowDetails from \"../ModalMovie/modalmovie\";\n\n// this is the favorite page cards listing \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Series() {\n  _s();\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [Series, setSeries] = useState([]);\n  const [OneMovie, setOneMovie] = useState([]);\n  const [count, setCounter] = useState(0);\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_HOST}/series`);\n      setSeries(res.data.Trending);\n      console.log(res.data.Trending);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ColorSchemesExample, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CardGroup, {\n      children: Series.length && Series.map(series => {\n        /*#__PURE__*/_jsxDEV(MovieShowDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Series, \"oNEppMda/7uodBY37mfNkCMVe4A=\");\n_c = Series;\nvar _c;\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"names":["React","MovieShowFavDetails","useState","useEffect","MovieFavCard","Row","CardGroup","axios","ColorSchemesExample","MovieShowDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","Series","_s","show","setShow","handleClose","handleShow","setSeries","OneMovie","setOneMovie","count","setCounter","fetchData","res","get","process","env","REACT_APP_HOST","data","Trending","console","log","err","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","series","_c","$RefreshReg$"],"sources":["/home/mousab/Netplix/src/components/Series/series.js"],"sourcesContent":["import React from \"react\";\nimport MovieShowFavDetails from \"../ModalMovie/modalFavMovie\";\nimport { useState, useEffect } from \"react\";\nimport MovieFavCard from \"../Movie/movieFav\";\nimport { Row, CardGroup } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport ColorSchemesExample from \"../NavBar/navbar\";\nimport \"./series.scss\";\nimport MovieShowDetails from \"../ModalMovie/modalmovie\";\n\n// this is the favorite page cards listing \nexport default function Series() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [Series, setSeries] = useState([]);\n  const [OneMovie, setOneMovie] = useState([]);\nconst [count,setCounter]=useState(0)\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_HOST}/series`);\n      setSeries(res.data.Trending);\n      console.log(res.data.Trending);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nuseEffect(()=>{\n  fetchData()\n},[]);\nreturn(\n  <>\n\n    <ColorSchemesExample />\n    <CardGroup>\n      {Series.length&&Series.map(series=>{\n        <MovieShowDetails />\n      })}\n    </CardGroup>\n  </>\n)\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,6BAA6B;AAC7D,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,SAASC,GAAG,EAAEC,SAAS,QAAQ,iBAAiB;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,kBAAkB;AAClD,OAAO,eAAe;AACtB,OAAOC,gBAAgB,MAAM,0BAA0B;;AAEvD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAMgB,WAAW,GAAGA,CAAA,KAAMD,OAAO,CAAC,KAAK,CAAC;EACxC,MAAME,UAAU,GAAGA,CAAA,KAAMF,OAAO,CAAC,IAAI,CAAC;EAEtC,MAAM,CAACH,MAAM,EAAEM,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqB,KAAK,EAACC,UAAU,CAAC,GAACtB,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,cAAe,SAAQ,CAAC;MACnEV,SAAS,CAACM,GAAG,CAACK,IAAI,CAACC,QAAQ,CAAC;MAC5BC,OAAO,CAACC,GAAG,CAACR,GAAG,CAACK,IAAI,CAACC,QAAQ,CAAC;IAChC,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAClB;EACF,CAAC;EAEHhC,SAAS,CAAC,MAAI;IACZsB,SAAS,CAAC,CAAC;EACb,CAAC,EAAC,EAAE,CAAC;EACL,oBACEd,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBAEEzB,OAAA,CAACH,mBAAmB;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvB7B,OAAA,CAACL,SAAS;MAAA8B,QAAA,EACPtB,MAAM,CAAC2B,MAAM,IAAE3B,MAAM,CAAC4B,GAAG,CAACC,MAAM,IAAE;QACjC,aAAAhC,OAAA,CAACF,gBAAgB;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACtB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA,eACZ,CAAC;AAEL;AAACzB,EAAA,CAhCuBD,MAAM;AAAA8B,EAAA,GAAN9B,MAAM;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}