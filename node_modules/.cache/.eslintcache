[{"/home/mousab/Netplix/src/index.js":"1","/home/mousab/Netplix/src/reportWebVitals.js":"2","/home/mousab/Netplix/src/App.js":"3","/home/mousab/Netplix/src/components/NavBar/navbar.js":"4","/home/mousab/Netplix/src/components/Home/home.js":"5","/home/mousab/Netplix/src/components/MovieList/movielist.js":"6","/home/mousab/Netplix/src/components/ModalMovie/modalFavMovie.js":"7","/home/mousab/Netplix/src/components/ModalMovie/modalmovie.js":"8","/home/mousab/Netplix/src/components/Movie/movie.js":"9","/home/mousab/Netplix/src/components/Movie/movieFav.js":"10","/home/mousab/Netplix/src/components/Carousel/carousel.js":"11","/home/mousab/Netplix/src/components/Series/series.js":"12","/home/mousab/Netplix/src/components/pages/pages.js":"13","/home/mousab/Netplix/src/components/Carousel/carouselSeries.js":"14","/home/mousab/Netplix/src/components/handlePages/notFound.js":"15","/home/mousab/Netplix/src/components/Carousel/trailer.js":"16"},{"size":664,"mtime":1719397887319,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1719397887319,"results":"19","hashOfConfig":"18"},{"size":732,"mtime":1719666618936,"results":"20","hashOfConfig":"18"},{"size":967,"mtime":1719756204401,"results":"21","hashOfConfig":"18"},{"size":2549,"mtime":1719762233021,"results":"22","hashOfConfig":"18"},{"size":2056,"mtime":1719926126057,"results":"23","hashOfConfig":"18"},{"size":4082,"mtime":1719928450617,"results":"24","hashOfConfig":"18"},{"size":3956,"mtime":1719927658667,"results":"25","hashOfConfig":"18"},{"size":1256,"mtime":1719765498061,"results":"26","hashOfConfig":"18"},{"size":1104,"mtime":1719676070713,"results":"27","hashOfConfig":"18"},{"size":1840,"mtime":1719929958507,"results":"28","hashOfConfig":"18"},{"size":2476,"mtime":1719836859656,"results":"29","hashOfConfig":"18"},{"size":2908,"mtime":1719663768006,"results":"30","hashOfConfig":"18"},{"size":741,"mtime":1719664293176,"results":"31","hashOfConfig":"18"},{"size":1520,"mtime":1719667117126,"results":"32","hashOfConfig":"18"},{"size":872,"mtime":1719835397296,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mpvdap",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"/home/mousab/Netplix/src/index.js",[],[],"/home/mousab/Netplix/src/reportWebVitals.js",[],[],"/home/mousab/Netplix/src/App.js",[],[],"/home/mousab/Netplix/src/components/NavBar/navbar.js",[],[],"/home/mousab/Netplix/src/components/Home/home.js",["91","92"],[],"import React from \"react\";\nimport MovieShowDetails from \"../ModalMovie/modalmovie\";\nimport { useState } from \"react\";\nimport MovieCard from \"../Movie/movie\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { CardGroup } from \"react-bootstrap\";\nimport \"./home.scss\";\nimport CarouselMovies from \"../Carousel/carousel\";\nimport ColorSchemesExample from \"../NavBar/navbar\";\nimport Pages from \"../pages/pages\";\nimport {Spinner} from \"react-bootstrap\";\nexport default function Home() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(500);\n  const [Movies, setMovies] = useState([]);\n  const [OneMovie, setOneMovie] = useState([]);\n  const [fetch, setFetch] = useState(true)\n  const [search,setSearch]=useState(true)\n\n  // this is the home page cards listing\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_HOST}/home/${page}`);\n      setMovies(res.data.Movies);\n      console.log('ORIGINAL DATA',res.data.Movies);\n      setFetch(false)\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [page]);\n  const changePage = (newPage) => {\n    if (newPage > 0 && newPage <= totalPages) {\n      setPage(newPage);\n    }\n  };\n  return (\n    <>\n      {fetch ? (\n        <div className=\"spinner-container\">\n          <Spinner animation=\"border\" variant=\"secondary\" />\n        </div>\n      ) : (\n        <div>\n          <ColorSchemesExample />\n         <CarouselMovies movie={Movies} setSearch={setSearch} search={search} setMovies={setMovies}/>\n          <div className=\"positions\">\n            <CardGroup>\n              {Movies.length &&\n                Movies.map((movie) => (\n                  <MovieCard\n                    key={movie.id}\n                    handleShow={handleShow}\n                    movieData={movie}\n                    setMovie={setOneMovie}\n                  />\n                ))}\n            </CardGroup>\n          </div>\n          {OneMovie && (\n            <MovieShowDetails\n              show={show}\n              handleClose={handleClose}\n              Movie={OneMovie}\n              allMovies={Movies}\n            />\n          )}\n          <footer>\n            <Pages\n              page={page}\n              totalPages={totalPages}\n              changePage={changePage}\n            />\n          </footer>\n        </div>\n      )}\n    </>\n\n  );\n}\n","/home/mousab/Netplix/src/components/MovieList/movielist.js",["93"],[],"import React from \"react\";\nimport MovieShowFavDetails from \"../ModalMovie/modalFavMovie\";\nimport { useState, useEffect } from \"react\";\nimport MovieFavCard from \"../Movie/movieFav\";\nimport {  CardGroup } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport ColorSchemesExample from \"../NavBar/navbar\";\nimport \"./movielist.scss\";\nimport { Spinner } from \"react-bootstrap\";\n// this is the favorite page cards listing \nexport default function Favorite() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [Movies, setMovies] = useState([]);\n  const [OneMovie, setOneMovie] = useState([]);\n  const [count, setCounter] = useState(0)\n  const [fetch, setFetch] = useState(true)\n\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_HOST}/getmovies`);\n      setMovies(res.data.movie);\n      console.log(Movies);\n      setFetch(false)\n    } catch (err) {\n      console.log(err);\n\n    }\n  };\n\n  console.log(count);\n  useEffect(() => {\n    fetchData();\n  }, [count]);\n\n  return (<>\n    <ColorSchemesExample />\n    {fetch ? (\n      <div className=\"spinner-container\">\n        <Spinner animation=\"border\" variant=\"secondary\" />\n      </div>\n    ) : Movies.length === 0 ? (\n      <div className=\"Empty\">\n        <i className=\"fas fa-film\"></i>\n        <p>You Don't Have Any Movie/Series Added Yet!</p>\n      </div>\n    ) : (\n      <div className=\"positions\">\n        <CardGroup>\n          {Movies.map((movie) => (\n            <MovieFavCard\n              key={movie.id}\n              handleShow={handleShow}\n              movieData={movie}\n              setMovie={setOneMovie}\n            />\n          ))}\n        </CardGroup>\n        {Movies && (\n          <MovieShowFavDetails\n            show={show}\n            handleClose={handleClose}\n            Movie={OneMovie}\n            setCounter={setCounter}\n            Movies={Movies}\n            setMovies={setMovies}\n          />\n        )}\n      </div>\n    )}\n\n\n  </>\n\n  );\n}\n","/home/mousab/Netplix/src/components/ModalMovie/modalFavMovie.js",["94"],[],"import Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./modalmovies.scss\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Watchtrailer from \"../Carousel/trailer\";\nimport { useEffect } from \"react\";\nfunction MovieShowFavDetails({ show, handleClose, Movie, setCounter, Movies, setMovies }) {\n  const [isupdate, setIsUpdate] = useState(true);\n  const [comment, setComment] = useState(\"\");\n  const [trailer, setTrailer] = useState(false);\n\n  const handleCommentChange = (event) => {\n    setComment(event.target.value);\n  };\n\n  const obj = {\n    movie_id: Movie.movie_id,\n    movie_title: Movie.movie_title,\n    movie_release_date: Movie.movie_release_date || \"UnOffical yet\",\n    movie_poster_path: Movie.movie_poster_path || \"UnOffical yet\",\n    movie_overview: Movie.movie_overview || \"No overview available Yet\",\n    movie_popularity: Movie.movie_popularity || \"Uncount Yet\",\n    movie_vote_count: Movie.movie_vote_count || \"Uncount Yet\",\n    comment: comment || \"No comment\",\n  };\n\n  const favoriteDeletion = () => {\n\n    axios\n      .delete(`${process.env.REACT_APP_HOST}/getmovies/${obj.movie_id}`, obj)\n      .then((data) => {\n        console.log('id :', obj.movie_id, \" Deleted !\");\n      })\n      .catch((err) => console.log(err));\n    const newArray = Movies.filter(movie => movie.movie_id !== obj.movie_id)\n    setMovies(newArray)\n    handleClose();\n  };\n\n  const updateComment = () => {\n    setIsUpdate(false);\n  };\n\n  const handleCloseFun = () => {\n    handleClose();\n    setComment('');\n    setIsUpdate(true);\n    setTrailer(false)\n  };\n\n  const favCommentEdit = () => {\n    axios\n      .put(`${process.env.REACT_APP_HOST}/getmovies/${obj.movie_id}`, obj)\n      .then(() => {  })\n      .catch((err) => console.log(err));\n\n    setIsUpdate(true);\n    Movie.comment=comment\n  };\n  const handleShowTrailer = () => {\n    console.log('entered Show trailer '+Movie.movie_title);\n    setTrailer(true)\n  }\n\n  return (\n    <div id={obj.movie_id}>\n      <Modal show={show} onHide={handleCloseFun}>\n        <Modal.Header closeButton>\n          <Modal.Title>{Movie.movie_title}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <article>{Movie.movie_overview}</article>\n        </Modal.Body>\n\n        <Modal.Footer className=\"rates\">\n          <p>Release Date: {Movie.movie_release_date || \"UnOfficial Yet\"}</p>\n          <p>Votes: {Movie.movie_vote_count || \"UnOfficial Yet\"}</p>\n          <p>Popularity: {Movie.movie_popularity || \"UnOfficial Yet\"}</p>\n        </Modal.Footer>\n\n        {isupdate && (\n          <Modal.Footer className=\"rates\">Your Comment: {Movie.comment}</Modal.Footer>\n        )}\n        {!isupdate && (\n          <form>\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                id=\"commentInput\"\n                className=\"input-field\"\n                value={comment}\n                onChange={handleCommentChange}\n              />\n              <label htmlFor=\"commentInput\" className=\"input-label\">\n                Edit Comment\n              </label>\n            </div>\n          </form>\n        )}\n\n        <Modal.Footer className=\"ButtonsFun\">\n          {isupdate ? (\n            <Button className=\"UpdateBtn\" onClick={updateComment} block>\n              Update Comment\n            </Button>\n          ) : (\n            <Button className=\"UpdateBtn\" onClick={favCommentEdit} block>\n              Save Changes\n            </Button>\n          )}\n        </Modal.Footer>\n\n        <Modal.Footer className=\"buttons\">\n          <Button variant=\"danger\" onClick={favoriteDeletion} style={{ width: '50%' }}>\n            Delete From Favorite\n          </Button>\n\n          <Button\n            variant=\"primary\"\n            onClick={handleShowTrailer}\n            style={{ width: '50%' }}\n          >\n            Watch Trailer\n          </Button>\n          {\n            trailer && <Watchtrailer linkProvied={Movie.Title} />\n          }\n        </Modal.Footer>\n      </Modal>\n    </div>\n\n\n  );\n}\n\nexport default MovieShowFavDetails;\n","/home/mousab/Netplix/src/components/ModalMovie/modalmovie.js",["95","96","97","98"],[],"import Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \".//modalmovies.scss\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Watchtrailer from \"../Carousel/trailer\";\nfunction MovieShowDetails({ show, handleClose, Movie, Movies }) {\n  const [comment, setComment] = useState(\"\");\n  const [trailer, setTrailer] = useState(false);\n\n  const handleCommentChange = (event) => {\n    setComment(event.target.value);\n  };\n  const obj = {\n    movie_id: Movie.ID,\n    movie_title: Movie.Title,\n    movie_release_date: Movie.Release_Date || \"UnOffical yet\",\n    movie_poster_path: Movie.Poster_Path || \"UnOffical yet\",\n    movie_overview: Movie.Overview != \"\" && Movie.Overview || \"No overview available Yet\",\n    movie_popularity: Movie.popularity || \"Uncount Yet\",\n    movie_vote_count: Movie.vote_count || \"No overview available Yet\",\n    vote_average: Movie.vote_average || \"No overview available Yet\",\n    comment: comment || \"No comment\",\n  };\n  const [variant, setVariant] = useState(\"primary\");\n  const [FavTxt, setFavTxt] = useState(\"Add To Favorite\");\nconst [isActive ,setIsActive]=useState(true)\n  function setTimer() {\n    setVariant(\"primary\");\n    setFavTxt(\"Add To Favorite\");\n  }\n\n  const addToFav = async () => {\n    const checking = await axios.get(\n      `${process.env.REACT_APP_HOST}/getmovies/${Movie.ID}`\n    );\n    console.log(checking, 'sdfdsfds');\n    if (checking.data.length) {\n      setVariant(\"danger\");\n      setFavTxt(\"The Movie Is Already In Favorite!\");\n\n      setTimeout(setTimer, 900);\n      setTimeout(handleClose, 1000);\n      return 0;\n    } else {\n      axios\n        .post(`${process.env.REACT_APP_HOST}/addMovie`, obj)\n        .then((data) => { })\n        .catch((err) => console.log(err));\n      setVariant(\"success\");\n      setFavTxt(\"Successfully Added To Favorite\");\n\n      setTimeout(setTimer, 900);\n      setTimeout(closingStuff, 800);\n    }\n  };\n  // to close after entering the comment\n  function closingStuff() {\n    setTrailer(false)\n\n    setComment('')\n    handleClose()\n  }\n  const handleShowTrailer = () => {\n\n    setTrailer(true)\n  }\n\n  return (\n    <div id={obj.movie_id}>\n      <Modal show={show} onHide={closingStuff}>\n        <Modal.Header closeButton>\n          <Modal.Title>{Movie.Title}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <article>{Movie.Overview}</article>\n        </Modal.Body>\n\n        <div className=\"ratesNcomments\">\n          <Modal.Footer className=\"rates\">\n            <p>Release Date: {Movie.Release_Date || \"UnOfficial Yet\"}</p>\n            <p>Votes: {Movie.vote_count || \"UnOfficial Yet\"}</p>\n            <p>Popularity: {Movie.popularity || \"UnOfficial Yet\"}</p>\n          </Modal.Footer>\n\n          <form>\n          <div class=\"input-container\">\n    <input\n      type=\"text\"\n      id=\"commentInput\"\n      class=\"input-field\"\n      value={comment}\n      onChange={handleCommentChange}\n      placeholder=\" \" \n    />\n              <label htmlFor=\"commentInput\" className=\"input-label\">\n                Your Comment\n              </label>\n            </div>\n            <Modal.Footer className=\"ButtonsFun\">\n              <Button variant={variant} onClick={addToFav} type=\"button\" className=\"UpdateBtn\">\n                {FavTxt}\n              </Button>\n            </Modal.Footer>\n            <Modal.Footer className=\"buttons\">\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Exit\n              </Button>\n\n              <Button\n                variant=\"primary\"\n                onClick={handleShowTrailer}\n                style={{ width: '50%' }}\n              >\n              Watch trailer\n              </Button>\n              {\n                trailer && <Watchtrailer linkProvied={Movie.Title} setIsActive={setIsActive}/>\n              }\n            </Modal.Footer>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n}\nexport default MovieShowDetails;\n","/home/mousab/Netplix/src/components/Movie/movie.js",["99","100","101","102"],[],"\nimport \"./movie.scss\";\nimport React from \"react\";\nexport default function MovieCard({ handleShow, movieData, setMovie }) {\n  const handleClick = () => {\n    setMovie(movieData);\n    handleShow();\n  };\n  return (\n    <div className=\"movieCards \" id={movieData.ID}>\n      <>\n        <table className=\"custom-carousel cardsMovies\">\n          <span>\n            <thead>\n              <tr></tr>\n            </thead>\n          </span>\n          <tbody className=\"movie-card \">\n            <a onClick={handleClick} className=\"image-container\">\n              <img\n                src={ movieData.Poster_Path&&`https://image.tmdb.org/t/p/w500/${movieData.Poster_Path}` || `https://thumbs.dreamstime.com/b/movie-icon-film-flap-sticker-dark-background-movie-icon-film-flap-sticker-dark-background-simple-vector-icon-117431578.jpg`}\n              />\n              <div className=\"overlay\">\n                <p>Rate : {Math.round(movieData.vote_average * 10) / 10}</p>\n              </div>\n            </a>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td className=\"Title\">\n                <div className=\"movie-title\">{movieData.Title}</div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </>\n    </div>\n  );\n}\n","/home/mousab/Netplix/src/components/Movie/movieFav.js",["103","104"],[],"import \"./movie.scss\";\nexport default function MovieFavCard({\n  handleShow,\n  movieData,\n  setMovie,\n}) {\n\n  // const [render,setRender]=useState()\n  const handleClick = () => {\n    setMovie(movieData);\n    handleShow();\n  };\n\n \n\n  return (\n    <div className=\"movieCards\" key={movieData.movie_id}>\n      <>\n        <table className=\"custom-carousel cardsMovies\">\n          <span>\n            <thead>\n              <tr></tr>\n            </thead>\n          </span>\n          <tbody className=\"movie-card \">\n            <a onClick={handleClick} className=\"image-container\">\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${movieData.movie_poster_path}`}\n              />\n              <div className=\"overlay\">\n                <p>Rate : {movieData.vote_average}</p>\n              </div>\n            </a>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td className=\"Title\">\n                <div className=\"movie-title\">{movieData.movie_title}</div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </>\n    \n  \n    </div>\n  );\n}\n","/home/mousab/Netplix/src/components/Carousel/carousel.js",[],[],"/home/mousab/Netplix/src/components/Series/series.js",["105","106"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { CardGroup } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport ColorSchemesExample from \"../NavBar/navbar\";\nimport \"./series.scss\";\nimport MovieShowDetails from \"../ModalMovie/modalmovie\";\nimport MovieCard from \"../Movie/movie\";\nimport Pages from \"../pages/pages\";\nimport { Spinner } from \"react-bootstrap\";\nimport CarouselMovies from \"../Carousel/carousel\";\n// this is the favorite page cards listing \nexport default function Series(req, res) {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [Series, setSeries] = useState([]);\n  const [OneSeries, setOneSeries] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(500);\n  const [fetch, setFetch] = useState(true)\n  const [search,setSearch]=useState(true)\n  const fetchData = async () => {\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_HOST}/series/${page}`);\n      setSeries(res.data.Trending);\n      setFetch(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const changePage = (newPage) => {\n    if (newPage > 0 && newPage <= totalPages) {\n      setPage(newPage);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [page]);\n  return (\n    <div>\n      {fetch ? (\n        <div className=\"spinner-container\">\n          <Spinner animation=\"border\" variant=\"secondary\" />\n        </div>\n      ) : (\n        <div>\n          <ColorSchemesExample />\n          <CarouselMovies movie={Series} setSearch={setSearch} search={search} setMovies={setSeries}/>\n          <div className=\"positions\">\n            <CardGroup>\n              {Series.length &&\n                Series.map((series) => (\n                  <MovieCard\n                    key={series.id}\n                    handleShow={handleShow}\n                    movieData={series}\n                    setMovie={setOneSeries}\n                  />\n                ))}\n            </CardGroup>\n          </div>\n          {OneSeries && (\n            <MovieShowDetails\n              show={show}\n              handleClose={handleClose}\n              Movie={OneSeries}\n            />\n          )}\n          <footer>\n            <Pages\n              page={page}\n              totalPages={totalPages}\n              changePage={changePage}\n            />\n          </footer>\n        </div>\n      )}\n    </div>\n\n\n  )\n}","/home/mousab/Netplix/src/components/pages/pages.js",["107","108"],[],"import { Pagination } from \"react-bootstrap\"\nimport Container from \"react-bootstrap/Container\";\nimport \"./pages.scss\"\n\nexport default function Pages({ page, totalPages, changePage }) {\n    return (\n        <Container>\n            <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination\">\n                    {\n                        page != 1 && (\n                            <li class=\"page-item\">\n                                <a class=\"page-link\" href=\"#top\" onClick={() => changePage(1)} aria-label=\"Previous\">\n                                    <span aria-hidden=\"true\">&laquo;</span>\n\n                                </a>\n                            </li>\n                        )\n\n                    }\n                    {page === 1 ? (\n                        <li className=\"page-item disabled\">\n                            <a className=\"page-link\" href=\"#top\">Previous</a>\n                        </li>\n                    ) : (\n                        <li className=\"page-item\">\n                            <a className=\"page-link\" href=\"#top\" onClick={() => changePage(page - 1)}>Previous</a>\n                        </li>\n                    )}\n                    {\n                        page !== 1 && (\n\n                            <li className=\"page-item \">\n                                <a className=\"page-link\" href=\"#top\" onClick={() => changePage(page - 1)}>{page - 1}</a>\n                            </li>\n                        )\n                    }\n\n                    <li className=\"page-item active\">\n                        <a className=\"page-link\" href=\"#top\" onClick={() => changePage(page)}>{page}</a>\n                    </li>\n                    {\n                        page !== 500 && (\n                            <li className=\"page-item\">\n                                <a className=\"page-link\" href=\"#top\" onClick={() => changePage(page + 1)}>{page + 1}</a>\n                            </li>\n                        )\n\n                    }\n                    {page === totalPages ? (\n                        <li className=\"page-item disabled\">\n                            <a className=\"page-link\" href=\"#top\">Next</a>\n                        </li>\n                    ) : (\n                        <li className=\"page-item\">\n                            <a className=\"page-link\" href=\"#top\" onClick={() => changePage(page + 1)}>Next</a>\n                        </li>\n                    )}\n                    {\n                        page !== totalPages && (<li class=\"page-item\">\n                            <a class=\"page-link\" href=\"#top\" onClick={() => changePage(500)} aria-label=\"Next\">\n                                <span aria-hidden=\"true\">&raquo;</span>\n                            </a>\n                        </li>)\n                    }\n                </ul>\n\n            </nav>\n        </Container>\n\n    )\n}","/home/mousab/Netplix/src/components/Carousel/carouselSeries.js",[],[],"/home/mousab/Netplix/src/components/handlePages/notFound.js",[],[],"/home/mousab/Netplix/src/components/Carousel/trailer.js",["109","110"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Watchtrailer = ({ linkProvied,setIsActive }) => {\n    console.log(linkProvied);\n    useEffect(() => {\n        const fetchTrailerLink = async () => {\n            try {\n                const res = await axios.get(`${process.env.REACT_APP_HOST}/trailers/${linkProvied}`);\n                const trailerUrl = res.data;\n                if(trailerUrl.url){\n                    window.open(trailerUrl.url, '_blank'); // Open the trailer in a new tab\n               \n                }\n                else{\nsetIsActive(false)\n                }\n            } catch (error) {\n                console.error('Error fetching trailer link:', error);\n            }\n        };\n\n        fetchTrailerLink();\n    }, [linkProvied]);\n\n    return null; // or any placeholder if needed\n};\nexport default Watchtrailer;",{"ruleId":"111","severity":1,"message":"112","line":18,"column":22,"nodeType":"113","messageId":"114","endLine":18,"endColumn":35},{"ruleId":"115","severity":1,"message":"116","line":37,"column":6,"nodeType":"117","endLine":37,"endColumn":12,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"116","line":36,"column":6,"nodeType":"117","endLine":36,"endColumn":13,"suggestions":"119"},{"ruleId":"111","severity":1,"message":"120","line":7,"column":10,"nodeType":"113","messageId":"114","endLine":7,"endColumn":19},{"ruleId":"121","severity":1,"message":"122","line":19,"column":36,"nodeType":"123","messageId":"124","endLine":19,"endColumn":38},{"ruleId":"125","severity":1,"message":"126","line":19,"column":42,"nodeType":"127","messageId":"128","endLine":19,"endColumn":44},{"ruleId":"125","severity":1,"message":"126","line":19,"column":60,"nodeType":"127","messageId":"128","endLine":19,"endColumn":62},{"ruleId":"111","severity":1,"message":"129","line":27,"column":8,"nodeType":"113","messageId":"114","endLine":27,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":19,"column":13,"nodeType":"132","endLine":19,"endColumn":66},{"ruleId":"133","severity":1,"message":"134","line":20,"column":15,"nodeType":"132","endLine":22,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":21,"column":44,"nodeType":"127","messageId":"128","endLine":21,"endColumn":46},{"ruleId":"125","severity":1,"message":"126","line":21,"column":105,"nodeType":"127","messageId":"128","endLine":21,"endColumn":107},{"ruleId":"130","severity":1,"message":"131","line":26,"column":13,"nodeType":"132","endLine":26,"endColumn":66},{"ruleId":"133","severity":1,"message":"134","line":27,"column":15,"nodeType":"132","endLine":29,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":21,"column":22,"nodeType":"113","messageId":"114","endLine":21,"endColumn":35},{"ruleId":"115","severity":1,"message":"116","line":40,"column":6,"nodeType":"117","endLine":40,"endColumn":12,"suggestions":"135"},{"ruleId":"111","severity":1,"message":"136","line":1,"column":10,"nodeType":"113","messageId":"114","endLine":1,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":11,"column":30,"nodeType":"123","messageId":"124","endLine":11,"endColumn":32},{"ruleId":"111","severity":1,"message":"137","line":1,"column":10,"nodeType":"113","messageId":"114","endLine":1,"endColumn":18},{"ruleId":"115","severity":1,"message":"138","line":24,"column":8,"nodeType":"117","endLine":24,"endColumn":21,"suggestions":"139"},"no-unused-vars","'setTotalPages' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["140"],["141"],"'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'isActive' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["142"],"'Pagination' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setIsActive'. Either include it or remove the dependency array. If 'setIsActive' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["143"],{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"144","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [fetchData, page]",{"range":"151","text":"152"},"Update the dependencies array to be: [count, fetchData]",{"range":"153","text":"154"},{"range":"155","text":"152"},"Update the dependencies array to be: [linkProvied, setIsActive]",{"range":"156","text":"157"},[1270,1276],"[fetchData, page]",[1090,1097],"[count, fetchData]",[1337,1343],[775,788],"[linkProvied, setIsActive]"]